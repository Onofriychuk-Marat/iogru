{
	"info": {
		"_postman_id": "71577a0a-5316-4be0-8c81-c69768ffd117",
		"name": "logru",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "10046871"
	},
	"item": [
		{
			"name": "admin",
			"item": [
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Answer has new token\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"token\");",
									"});",
									"pm.test(\"Answer has new user_id\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"});",
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"token_user\", ''+jsonData['token']);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"login\": \"admin\",\n    \"password\": \"admin\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/admin/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"admin",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "showUsers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Answer has new token\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"token\");",
									"});",
									"pm.test(\"Answer has new user_id\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"});",
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"token_user\", ''+jsonData['token']);",
									"pm.environment.set(\"id_user\", ''+jsonData['id']);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token_user}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/admin/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"admin",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "addUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Answer has new token\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"token\");",
									"});",
									"pm.test(\"Answer has new user_id\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"});",
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"token_user\", ''+jsonData['token']);",
									"pm.environment.set(\"id_user\", ''+jsonData['id']);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token_user}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"login\": \"test06skhs222\",\n    \"name\": \"marat06\",\n    \"age\": 13,\n    \"password\": \"12345\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/admin/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"admin",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "showUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Answer has new token\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"token\");",
									"});",
									"pm.test(\"Answer has new user_id\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"});",
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"token_user\", ''+jsonData['token']);",
									"pm.environment.set(\"id_user\", ''+jsonData['id']);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token_user}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/admin/users/62d195b46a6b79778b117344",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"admin",
								"users",
								"62d195b46a6b79778b117344"
							]
						}
					},
					"response": []
				},
				{
					"name": "changeUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Answer has new token\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"token\");",
									"});",
									"pm.test(\"Answer has new user_id\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"});",
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"token_user\", ''+jsonData['token']);",
									"pm.environment.set(\"id_user\", ''+jsonData['id']);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token_user}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"login\": \"test6sssf622226\",\n    \"name\": \"marat666\",\n    \"age\": 21,\n    \"mood\": 100,\n    \"password\": \"12345\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/admin/users/62d195b46a6b79778b117344",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"admin",
								"users",
								"62d195b46a6b79778b117344"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Answer has new token\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"token\");",
									"});",
									"pm.test(\"Answer has new user_id\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"});",
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"token_user\", ''+jsonData['token']);",
									"pm.environment.set(\"id_user\", ''+jsonData['id']);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token_user}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/admin/users/62d195b46a6b79778b117344",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"admin",
								"users",
								"62d195b46a6b79778b117344"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "work",
			"item": [
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Answer has new token\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"token\");",
									"});",
									"pm.test(\"Answer has new user_id\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"});",
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"token_user\", ''+jsonData['token']);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token_user}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"position\": \"backend node.js programmer\",\n    \"work\": \"iogru\",\n    \"location\": \"Moscow\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/profile/work",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"profile",
								"work"
							]
						}
					},
					"response": []
				},
				{
					"name": "show",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Answer has new token\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"token\");",
									"});",
									"pm.test(\"Answer has new user_id\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"});",
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"token_user\", ''+jsonData['token']);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token_user}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/profile/work",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"profile",
								"work"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Answer has new token\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"token\");",
									"});",
									"pm.test(\"Answer has new user_id\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"});",
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"token_user\", ''+jsonData['token']);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token_user}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/profile/work",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"profile",
								"work"
							]
						}
					},
					"response": []
				},
				{
					"name": "edit",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Answer has new token\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"token\");",
									"});",
									"pm.test(\"Answer has new user_id\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"});",
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"token_user\", ''+jsonData['token']);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token_user}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"position\": \"cleaner\",\n    \"work\": \"iogru\",\n    \"location\": \"Moscow\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/profile/work",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"profile",
								"work"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "user",
			"item": [
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Answer has new token\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"token\");",
									"});",
									"pm.test(\"Answer has new user_id\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"});",
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"token_user\", ''+jsonData['token']);",
									"pm.environment.set(\"id_user\", ''+jsonData['id']);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "token {{token_user}} ",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"login\": \"i\",\n    \"password\": \"12345\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "registration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Answer has new token\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"token\");",
									"});",
									"pm.test(\"Answer has new user_id\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"});",
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"token_user\", ''+jsonData['token']);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"login\": \"i\",\n    \"name\": \"marat01\",\n    \"age\": 21,\n    \"password\": \"12345\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/registration",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"registration"
							]
						}
					},
					"response": []
				},
				{
					"name": "show",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Answer has new token\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"token\");",
									"});",
									"pm.test(\"Answer has new user_id\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"});",
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"token_user\", ''+jsonData['token']);",
									"pm.environment.set(\"id_user\", ''+jsonData['id']);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token_user}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "token {{token_user}}",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://localhost:3000/profile",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "edit",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Answer has new token\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"token\");",
									"});",
									"pm.test(\"Answer has new user_id\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"});",
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"token_user\", ''+jsonData['token']);",
									"pm.environment.set(\"id_user\", ''+jsonData['id']);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token_user}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"marat01\",\n    \"age\": 100,\n    \"levelMood\": 10\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/profile",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "goToBarWithColleagues",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Answer has new token\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"token\");",
									"});",
									"pm.test(\"Answer has new user_id\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"});",
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"token_user\", ''+jsonData['token']);",
									"pm.environment.set(\"id_user\", ''+jsonData['id']);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token_user}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/go-to-bar-with-colleagues",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"go-to-bar-with-colleagues"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": " token ",
			"value": "0000"
		}
	]
}